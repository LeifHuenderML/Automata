# /**
#  * @file CmakeLists.txt
#  * @author Leif Huender, Aaron, Shaun Swant
#  * @brief to build run: cmake -B build/  then cmake --build build/
# cd build then run the executable ./Automata to run the program
#  * @version 0.1
#  * @date 2024-01-20
#  * 
#  * @copyright Copyright (c) 2024 Leif Huender
#  * Permission is hereby granted, free of charge, to any person obtaining a copy
#  * of this software and associated documentation files (the "Software"), to deal
#  * in the Software without restriction, including without limitation the rights
#  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  * copies of the Software, and to permit persons to whom the Software is
#  * furnished to do so, subject to the following conditions:
#  * 
#  * The above copyright notice and this permission notice shall be included in
#  * all copies or substantial portions of the Software.
#  * 
#  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  * THE SOFTWARE.
#  */

cmake_minimum_required(VERSION 3.18 FATAL_ERROR)
project(Automata)

execute_process(COMMAND xcrun --show-sdk-path OUTPUT_VARIABLE OSX_SYSROOT)
string(STRIP ${OSX_SYSROOT} OSX_SYSROOT)
set(CMAKE_OSX_SYSROOT ${OSX_SYSROOT})


# Set the path to PyTorch
set(CMAKE_PREFIX_PATH "/opt/homebrew/Cellar/pytorch/2.1.2_1")

# Find packages
find_package(Torch REQUIRED)

set(SFML_DIR "/opt/homebrew/Cellar/sfml/2.6.1/lib/cmake/SFML")
find_package(SFML 2.6.1 COMPONENTS graphics window system REQUIRED)

# Set CXX flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${TORCH_CXX_FLAGS}")

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)



# Add your executable
# add_executable(Automata rlEngine/main.cpp )
add_executable(
    Automata
    Menu/Menu.cpp 
    Menu/Button.cpp 
    rlEngine/interface.cpp 
    main.cpp 
    gameController/gameLoop.cpp 
    CellManagement/Cell.cpp 
    CellManagement/Grid.cpp 
    CellManagement/HighCell.cpp 
    CellManagement/HighGrid.cpp 
    CellManagement/RainbowCell.cpp 
    CellManagement/RainbowGrid.cpp
)

# Link libraries
target_link_libraries(Automata "${TORCH_LIBRARIES}" sfml-graphics sfml-window sfml-system sfml-audio)
set_property(TARGET Automata PROPERTY CXX_STANDARD 17)